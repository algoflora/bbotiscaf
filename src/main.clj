(ns main
  (:require [cheshire.core :refer [parse-string]]
            [bbotiscaf.core :as bbot]))

(defn handler [& args]
  (println "Hello from BBotiscaf!")
  (bbot/handler (-> args first (parse-string true))))

(clojure.pprint/pprint
 {:type :malli.core/register-function-schema, :message :malli.core/register-function-schema, :data {:ns bbotiscaf.core, :name handler, :schema [:=> [:cat [:or [:map [:update_id #object[clojure.core$int_QMARK_ 0x7c10e472 ???]] [:message {:optional true} [:map [:message_id #object[clojure.core$int_QMARK_ 0x7c10e472 ???]] [:from [:map [:id #object[clojure.core$int_QMARK_ 0x7c10e472 ???]] [:is_bot #object[clojure.core$boolean_QMARK_ 0x4243d830 ???]] [:first_name #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:last_name {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:username {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:language_code {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]]]] [:chat [:map [:id #object[clojure.core$int_QMARK_ 0x7c10e472 ???]] [:type [:enum "private" "group" "supergroup" "channel"]] [:title {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:username {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:first_name {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:last_name {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]]]] [:date #object[clojure.core$int_QMARK_ 0x7c10e472 ???]] [:text {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]]]] [:callback_query {:optional true} [:map [:id #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:from [:map [:id #object[clojure.core$int_QMARK_ 0x7c10e472 ???]] [:is_bot #object[clojure.core$boolean_QMARK_ 0x4243d830 ???]] [:first_name #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:last_name {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:username {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:language_code {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]]]] [:message [:or [:map [:message_id #object[clojure.core$int_QMARK_ 0x7c10e472 ???]] [:from [:map [:id #object[clojure.core$int_QMARK_ 0x7c10e472 ???]] [:is_bot #object[clojure.core$boolean_QMARK_ 0x4243d830 ???]] [:first_name #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:last_name {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:username {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:language_code {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]]]] [:chat [:map [:id #object[clojure.core$int_QMARK_ 0x7c10e472 ???]] [:type [:enum "private" "group" "supergroup" "channel"]] [:title {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:username {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:first_name {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:last_name {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]]]] [:date #object[clojure.core$int_QMARK_ 0x7c10e472 ???]] [:text {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]]] [:map [:from [:map [:id #object[clojure.core$int_QMARK_ 0x7c10e472 ???]] [:type [:enum "private" "group" "supergroup" "channel"]] [:title {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:username {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:first_name {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]] [:last_name {:optional true} #object[clojure.core$string_QMARK___5475 0x910f876 "clojure.core$string_QMARK___5475@910f876"]]]] [:message_id #object[clojure.core$int_QMARK_ 0x7c10e472 ???]] [:date 0]]]] [:data [:string {:max 64}]]]]] [:map [:event [:map [:type [:enum "internal"]]]]]]] :nil], :data nil, :key :clj, :exception #error {
:cause ":malli.core/invalid-schema"}}})
